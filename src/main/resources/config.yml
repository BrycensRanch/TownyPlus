# ${project.name} ${project.version} Configuration
# The best towny plugin yet undefeated

# Don't you dare touch this, it's for the plugin to know if it needs to update the config in the future
config-version: 1

settings:

  # The language file to use (must be in the root folder)
  language-file: "lang-en.yml"

  # Should we check for updates?
  # If disabled, auto-update will be disabled as well (if enabled)
  update-checker: true


  # The GitHub personal access token to use for the auto updater
  # This doesn't apply to the update checker nor should you need to use it.
  # This was only used for testing purposes and is not needed for the plugin to work.
  github-pat: 'none'

  # Polymart users should not enable this, you guys already have a way to auto update that is proven to work with TownyPlus
  # If you're not using Polymart, you can enable this to auto-update TownyPlus
  # Keep in mind that auto-updating is not recommended by a majority of the Minecraft community, but, it's your choice.
  # The plugin will never auto-update to a version that isn't on the same release channel or major version.
  # For example, if you're on 1.0.0, it will never auto-update to 2.0.0
  # Since that it indicates a major change in the plugin.
  # If you're on 1.0.0, it will auto-update to 1.1.0
  # If you're on 1.0.11-alpha.4, it will auto-update to 1.0.11-alpha.5
  # If you're on 1.0.11-alpha.4, it will not auto-update to 1.0.12
  # Since it is not on the same release channel (alpha vs stable)
  auto-update: false

  # Activate debug mode (produces extra logs)
  debug-mode: false

  # Whether to upload metrics to bStats (https://bstats.org/plugin/bukkit/TownyPlus/14161)
  metrics: true


  # Enable CoreProtect integration (requires CoreProtect)
  # Basic gist of it is that it will log towny actions, CoreProtect logs, and send a message to Discord with the logs.
  coreprotect:
    enabled: true

  bypass:
    # Whether to enable the bypass command
    # This command allows you to bypass towny restrictions
    # This is useful for admins that need to do something that would normally be restricted
    # For example, if you're an admin, and you need to break a block in a town, you can use this command to bypass the towny restrictions
    # This command is only available to players with the townyplus.bypass permission
    enabled: true
    # The default duration of the bypass (in 1d2h3m4s format)
    # This is the default duration that will be used if the player didn't specify a duration
    # If you want to disable the default duration, set this to 0s
    default-duration: 30s
    # The maximum duration of the bypass (in 1d2h3m4s format)
    # This is the maximum duration that a player can bypass towny restrictions for
    # If you want to disable the maximum duration, set this to 0s
    # If the player has the townyplus.bypass.max-duration permission, they will be able to bypass towny restrictions for as long as they want
    # However, if the player doesn't have the townyplus.bypass.max-duration permission, they will be able to bypass towny restrictions for the duration specified in this setting
    max-duration: 30s
    # The cooldown of the bypass command (in 1d2h3m4s format)
    # This is the cooldown that will be applied to the bypass command
    # If you want to disable the cooldown, set this to 0s
    cooldown: 10s



  database:
    # The type of database to use
    # Supported types: MySQL, MariaDB, h2, SQLite
    # Case insensitive
    type: sqlite
    # JDBC connection string
    # If you want to use h2, your URL would be:
    # jdbc:h2:./plugins/TownyPlus/data.db
    # You can also put 'none' to specify that you want the plugin to generate a JDBC connection string for you based off of what you configured.
    url: jdbc:sqlite:./plugins/TownyPlus/data.db
    host: localhost
    port: 3306
    # The name of the database to use
    name: townyplus

    username: root

    password: DONTUSETHISPASSWORD

    # Only used for MySQL & PostgreSQL
    use-ssl: false
    
    # The type of SSL standard you want to use
    # default uses the driver's default property - which is preferred 
    # If you want a higher level of security, you should view your database's docs for this setting.
    # MySQL: https://dev.mysql.com/doc/refman/5.7/en/connection-options.html#option_general_ssl-mode
    # PostgreSQL: https://www.postgresql.org/docs/current/libpq-ssl.html

    # If you feed this a bad value expect the plugin to fail to start.
    ssl-mode: default

    # Will create an encrypted connection if the server supports encrypted connections. 
    # If the server cannot create an encrypted connection, the connection will fail. 
    require-ssl: false

    # The table prefix to use for the database
    # If you're using a shared database, you can use this to prevent conflicts with other plugins
    table-prefix: townyplus_

  # Enable DiscordSRV integration (requires DiscordSRV)
  # Basic gist of it is that it will send messages to Discord when something happens with a town
  discordsrv-integration:
    enabled: true
    # The channel to log general towny actions to (e.g. town creation, town deletion, etc.)
    log-channel: 'towny-logs'
    # Whether to use a webhook for logging general towny actions
    log-webhook-enabled: false
    # The webhook to use for logging general towny actions instead of using the bot's account
    log-webhook: 'https://discord.com/api/webhooks/1234567890/1234567890'

  # Enable internal webserver
  internal-webserver:
     # Enable the REST API (produces extra logs)
     enabled: true
     # Must the same exact parameters our internal webserver uses
     # Refer to the source code for more information
     # If you don't know what you're doing, leave it as 'none'
     # We're also open to pull requests if you want to properly add support for other APIs via the config
     external-api: 'none'
     # Localhost is the default, but you can change it to '0.0.0.0' to allow external connections
     bind: '127.0.0.1'
     # Port to bind to, if it is already in use, the rest API will error, but, won't disable.
     port: 8080
  commands:
    # The main command label and aliases
    # You can change these to whatever you want as long as they don't conflict with other plugins
    main-command-label: townyplus
    main-command-aliases: [townplus, townyp, tplus, townp]
//file:noinspection SpellCheckingInspection
//file:noinspection GroovyAssignabilityCheck
buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'kr.entree.spigradle' version '2.3.4'
    id 'io.freefair.lombok' version '6.3.0'
    id 'com.gorylenko.gradle-git-properties' version '2.3.2'
    id 'java'
    id 'jacoco'
    id 'idea'
}

apply from: "$rootDir/gradle/jacoco.gradle"
apply from: "$rootDir/gradle/publish.gradle"

if (project.hasProperty("local_script")) {
    apply from: file(local_script + "/build.local.gradle")
}

sourceCompatibility = 17
targetCompatibility = 17

ext {
    mcVersion = project.property("mcVersion")
}

group project.property("group")

spigot {
    name = project.property("pluginName")
    authors = List.of(project.property("author").toString())
    apiVersion = project.property("apiVersion")
    description = project.property("description")
    load = STARTUP
    depends = ['Towny']
//    softDepends = ['DiscordSRV']

}

compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs += ["-parameters"]
    options.fork = true
    options.forkOptions.executable = 'javac'
}

archivesBaseName = project.property("pluginName")

repositories {
    mavenLocal()
    mavenCentral()
    spigot()
    maven { url = 'https://jitpack.io' }
    maven { url = 'https://libraries.minecraft.net/' }
//    maven { url = 'https://repo.spongepowered.org/maven/' }
    maven { url = 'https://nexus.scarsz.me/content/groups/public/' }
//    maven { url = 'https://repo.aikar.co/content/groups/aikar/' }
    maven { url = 'https://repo.dmulloy2.net/repository/public/' }
    maven { url = 'https://oss.sonatype.org/content/repositories/snapshots/' }
    maven { url = 'https://repo.glaremasters.me/repository/towny/'}
}

dependencies {
    // using spigot-api
    // implementation spigot(mcVersion)
    // or using paper-api
    implementation "io.papermc.paper:paper-api:${mcVersion}-R0.1-SNAPSHOT"

    // Command Handling! https://commandframework.cloud
    implementation 'cloud.commandframework:cloud-paper:1.6.1'
    implementation 'cloud.commandframework:cloud-minecraft-extras:1.6.1'
    // Dependency for our way of command handling
    implementation 'me.lucko:commodore:1.11'
    // For handling multi platform configuration, simply amazing
    implementation "org.spongepowered:configurate-yaml:4.1.2"
    // Towny
    compileOnly 'com.palmergames.bukkit.towny:towny:0.97.5.13'
    // Adventure
    implementation "net.kyori:adventure-api:4.9.3"
    implementation "net.kyori:adventure-text-minimessage:4.10.0-SNAPSHOT"

//    // DiscordSRV, optional dependency
//    compileOnly 'com.discordsrv:discordsrv:1.24.0'
//    // JDA for DiscordSRV
//    implementation("net.dv8tion:JDA:5.0.0-alpha.4") {
//        exclude module: 'opus-java'
//    }

    // Test dependencies
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'
    testImplementation 'org.mockito:mockito-core:4.3.0'
    testImplementation 'com.github.seeseemelk:MockBukkit-v1.18:1.15.5'
    testImplementation 'org.assertj:assertj-core:3.22.0'
}

shadowJar {
    classifier = ''
    dependencies {
//        include(dependency('com.discordsrv:discordsrv:1.24.0'))
        include(dependency('com.palmergames.bukkit.towny:towny:0.97.5.8'))
        include(dependency("net.kyori:adventure-text-minimessage:4.1.0-SNAPSHOT"))

    }
//    relocate 'com.discordsrv', "${packageName}.discordsrv"
    relocate 'com.palmergames.bukkit.towny', "${packageName}.towny"
}

gitProperties {
    failOnNoGitDirectory = false
}

tasks.build.dependsOn(shadowJar)
tasks.publish.dependsOn(shadowJar)
tasks.prepareSpigotPlugins.dependsOn(shadowJar)

test {
    useJUnitPlatform()
    testLogging {
        events "skipped", "failed"
    }
    ignoreFailures = true
}

processResources {
    project.properties.put("version", this.version)
    expand project.properties
}

defaultTasks 'build'
